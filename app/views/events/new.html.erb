<!-- Container -->
<div class="min-h-[95vh] bg-gray-200 grid place-items-center px-4">
  <div class="w-full max-w-4xl bg-white rounded-2xl shadow-lg p-10">
    <div class="mb-6 text-center">
      <%= render("shared/logo") rescue "" %>
      <h1 class="mt-4 text-3xl font-bold tracking-tight text-gray-800">Create a New Event</h1>
      <p class="text-gray-600 text-sm">Plan your next private event – invite your friends!</p>
    </div>

    <% if @event.errors.any? %>
      <div class="mb-6 rounded-lg border border-red-200 bg-red-50 p-4 text-sm text-red-700">
        <p class="font-semibold mb-2">
          <%= pluralize(@event.errors.count, "error") %> prevented this event from being saved:
        </p>
        <ul class="list-disc list-inside">
          <% @event.errors.full_messages.each do |msg| %>
            <li><%= msg %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <%= form_with(model: @event, local: true, class: "grid grid-cols-1 md:grid-cols-3 gap-10 items-start") do |f| %>
      <!-- Event Details -->
      <div class="md:col-span-2 space-y-6">
        <div>
          <%= f.label :title, "Title", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= f.text_field :title,
              class: "w-full rounded-lg border border-gray-300 px-4 py-2 text-gray-800 focus:ring-2 focus:ring-blue-400 focus:outline-none",
              placeholder: "Event title" %>
        </div>

        <div>
          <%= f.label :description, "Description", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= f.text_area :description,
              rows: 5,
              class: "w-full rounded-lg border border-gray-300 px-4 py-2 text-gray-800 focus:ring-2 focus:ring-blue-400 focus:outline-none",
              placeholder: "Describe your event..." %>
        </div>

        <div>
          <%= f.label :location, "Location", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= f.text_field :location,
              class: "w-full rounded-lg border border-gray-300 px-4 py-2 text-gray-800 focus:ring-2 focus:ring-blue-400 focus:outline-none",
              placeholder: "Where will it happen?" %>
        </div>

        <div>
          <%= f.label :date, "Date", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= f.date_field :date,
              class: "w-full rounded-lg border border-gray-300 px-4 py-2 text-gray-800 focus:ring-2 focus:ring-blue-400 focus:outline-none" %>
        </div>

        <div>
          <%= f.label :event_type, "Event type", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= f.select :event_type, Event.event_types.keys.map { |type| [type.titleize, type] },
              {}, class: "w-full rounded-lg border border-gray-300 px-4 py-2 text-gray-800 focus:ring-2 focus:ring-blue-400 focus:outline-none" %>
        </div>
      </div>

      <!-- Gäste-Einladung -->
      <div class="md:col-span-1 space-y-6">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">Invite Guests</h2>
        <div>
          <label for="user_search" class="block text-sm font-medium text-gray-700 mb-1">Search users to invite</label>
          <input id="user_search" type="text" placeholder="Type name or email..."
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none"
            autocomplete="off" data-action="input->invite#search">

          <!-- Gefundene Nutzer-Liste (per JS füllen) -->
          <ul id="user_results" class="mt-2 space-y-1"></ul>
        </div>

        <!-- Eingeladene Nutzer-Liste -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Invited users</label>
          <ul id="invited_users" class="space-y-2"></ul>
        </div>
      </div>

      <div class="md:col-span-3 flex items-center justify-between pt-8">
        <%= link_to "Cancel", events_path, class: "text-gray-500 hover:text-gray-700 text-base transition" %>
        <%= f.submit "Create Event", class: "bg-blue-600 hover:bg-blue-700 text-white text-base font-medium px-6 py-3 rounded-xl shadow-sm transition" %>
      </div>

      <!-- Hidden inputs for invited user IDs -->
      <div id="invites_fields"></div>
    <% end %>
  </div>
</div>

<!-- JS für Guests-Auswahl -->
<script>
  // Beispiel: Dummy User-Daten für die Suche
  // Ersetze dies später mit AJAX-Call auf deine User-API!
  const users = [
    { id: 1, name: "Max Mustermann", email: "max@example.com" },
    { id: 2, name: "Julia Musterfrau", email: "julia@example.com" },
    { id: 3, name: "Tom Tester", email: "tom@example.com" }
  ];
  let invited = [];

  function renderUserResults(results) {
    const ul = document.getElementById("user_results");
    ul.innerHTML = "";
    results.forEach(user => {
      const li = document.createElement("li");
      li.innerHTML = `<button type="button" class="w-full text-left px-3 py-1 rounded hover:bg-blue-50 transition" onclick="inviteUser(${user.id})">${user.name} <span class="text-xs text-gray-500">${user.email}</span></button>`;
      ul.appendChild(li);
    });
  }

  function inviteUser(id) {
    const user = users.find(u => u.id === id);
    if (!user || invited.some(u => u.id === id)) return;
    invited.push(user);
    renderInvitedUsers();
    renderInvitesFields();
    document.getElementById("user_results").innerHTML = "";
    document.getElementById("user_search").value = "";
  }

  function removeInvitedUser(id) {
    invited = invited.filter(u => u.id !== id);
    renderInvitedUsers();
    renderInvitesFields();
  }

  function renderInvitedUsers() {
    const ul = document.getElementById("invited_users");
    ul.innerHTML = "";
    invited.forEach(user => {
      const li = document.createElement("li");
      li.innerHTML = `<span class="inline-block px-3 py-1 bg-blue-100 text-blue-800 rounded-full">${user.name} <span class="text-xs text-gray-500">${user.email}</span></span>
        <button type="button" class="ml-2 text-sm text-red-400 hover:text-red-700" onclick="removeInvitedUser(${user.id})">&times;</button>`;
      ul.appendChild(li);
    });
  }

  function renderInvitesFields() {
    const div = document.getElementById("invites_fields");
    div.innerHTML = invited.map(user =>
      `<input type="hidden" name="event[invite_user_ids][]" value="${user.id}">`
    ).join("");
  }

  document.addEventListener("input", function(e) {
    if (e.target.id === "user_search") {
      const term = e.target.value.toLowerCase();
      if (!term) {
        renderUserResults([]);
        return;
      }
      const results = users.filter(u =>
        u.name.toLowerCase().includes(term) || u.email.toLowerCase().includes(term)
      );
      renderUserResults(results);
    }
  });
</script>